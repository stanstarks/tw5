created: 20170920082817800
modified: 20171115062320486
tags: Programming
title: Software Research
type: text/vnd.tiddlywiki

! Bibs

* [[A Survey of Machine Learning for Big Code and Naturalness|https://arxiv.org/abs/1709.06182]]

! Methods
* Theory first approach: formal, or logico-deductive, approach
** The elegance and rigor of definitions, abstractions, and formal proofs-ofproperties are of dominant concern
* Machine learning

! Applications
* [[Security]]
* program verification
** Behavioral consistency of C and Verilog programs using bounded model checking (2003)
* bug finding
** A few billion lines of code later: using static analysis to find bugs in the real world (2010)
* refactoring
** The ASTRÃ‰E analyzer (2005)
* Knowledge Representation
** HDSKG (SANER 2017)
*** Extract relation triples from stackoverflow tagWiki
*** Parsing and POS using coreNLP
*** Relations discovered with rule based methods
*** Filtered with semi-supervised classification (garbage in garbage out?)
** Unsupervised Software-Specific Morphological Forms Inference from Informal Discussions (ICSE 2017)
*** Build SE thesaurus and detecting synonyms from unsupervised corpus i.e. Stack Overflow.
*** Train a new [[Word Embedding]] (skip-gram) to group similar words
*** Discriminate synonyms and abbreviations
** Mining Analogical Libaries in Q&A Discussions (SANER 2016)
*** Learn similar libraries (of different langs) from stackoverflow tags
*** association rule mining on tag co-occurence
*** POS and phrase chunking on tagWiki to classify tags
*** [[Word2Vec]] library grouping
** TechLand: Asisting Technology Landscape Inquiries with Insights from Stack Overflow (ICSME2016)
*** QA system based on knowledge graph
*** similar methods with previous paper
*** Queries are stemmed and parsed, greedily match tech terms
*** Visualization from tagWiki data and knowledge graph
*** Recommondation based on co-occurrence and trends
* Neural Language Interface
** Learning to Extract API Mentions from Informal Natural Language Discussions
*** matching natural language and APIs, similar to NER
*** @@color:red;relative small dataset@@
*** @@color:#859900;broaden the scope to doc2code@@
*** @@color:red;having trouble disambigurating keywords and common words@@
*** @@color:#859900;a pointer network should decide when to copy and when to generate@@
*** Brown clustering and word embeddings quantized features as input of
*** semi-supervised CRF classifier
* Predicting Semantically Linkable Knowledge in Developer Online Forums via CNN
** Use a siamese net for feature extraction
** @@color:red;sequential information is lost with CNNs@@
** @@color:#859900;use relation network to model covariance@@
** @@color:red;relatedness is not linear, should predict with multiheads@@
** @@color:#859900;triplet loss to learn to rank@@

! Directions
* Make use of community: Open-source software systems such as Linux,MySQL, Django, Ant, and OpenEJB have become ubiquitous. These systems publicly expose not just source code, but also meta-data concerning authorship, bug-fixes, and review processes.
* Literate programming: The naturalness hypothesis [[NLP for SE]]
* Automatic test cases generation, distributed system testing and bug finding. It would be great we can relate AI with the security community.
* [[AI for SE Mind Map]]